# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno and run tests across stable and nightly builds on Windows, Ubuntu and macOS.
# For more information see: https://github.com/denolib/setup-deno

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci-jobs-setup:
    runs-on: ubuntu-latest # runs a test on Ubuntu

    steps:
      # Setup Jobs
      - name: Action CheckoutV2
        uses: actions/checkout@v2
        
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.16.1

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '11.x'

      - name: Install node.js packages
        run: npm install
        
      #Tests unitaires frontend & backend
      - name: Tests unitaires frontend
        run: npm run ci:frontend:test
        
      - name: Tests unitaires backend
        run: chmod +x mvnw && npm run ci:backend:test

      #Tests d'integrations
      - name: Prepare .jar for prod
        run: ./mvnw -ntp verify -DskipTests --batch-mode "-Pprod" "-Pe2e" "-Denforcer.skip=true"*
        
      - name: CrÃ©er une BDD et lance le .jar dans un docker
        run: npm run ci:e2e:prepare:docker
        
      - name: Lance le test d'intÃ©gration
        run: npm run ci:e2e:run

      - name: Met fin au docker et nettoye le tout
        run: npm run ci:e2e:teardown

  ci-jobs-deploy:
    runs-on: ubuntu-latest
    needs: ci-jobs-setup
    steps:

      - name: Action CheckoutV2
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Heroku login credentials
        run: |
          cat > ~/.netrc <<EOF
            machine api.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
            machine git.heroku.com
              login $HEROKU_EMAIL
              password $HEROKU_API_KEY
          EOF
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}

      - name: Add Heroku remote
        run: heroku git:remote --app $HEROKU_APPNAME
        env:
          HEROKU_APPNAME: ${{ secrets.HEROKU_APPNAME }}
          
      - name: Push to Heroku
        run: git push heroku main
